#ifndef EVENT_H_
#define EVENT_H_

/**
 * Модуль хранения и выборки событий ОС (менеджер событий).
 * Все события в ОС связаны с потоками и их состояниями, поэтому объектом хранения
 * является указатель на структуру потока. Хранение осуществляется по значению
 * системного времени наступления какого-либо события по потоку.
 * Для оптимизации применяется алгоритм красно-черного дерева в модификации 64-х битного
 * ключа, что позволяет хранить события по точным значениям системного 64-х битного времени в нс.
 *
 * Модуль не защищен от параллельного вызова методов,
 * предполагается внешшняя защита диспетчером задач
 */

void kevent_init();

/**
 * Блокировка хранилища. Реализуется на kobject_lock (с блокировкой вытеснения).
 * Необходимо применять для защиты целостности выполнения
 * операций вставки и получения текущего ожидаемого события по kevent_get_time
 * совместно с какими то другими связанными действиями в ядре
 */
void kevent_store_lock();
void kevent_store_unlock();

/**
 * Добавление нового события в хранилище с сортировкой по целевому времени
 */
void *kevent_insert(uint64_t event_time_ns, struct thread *thr);
/**
 * Удаление(отмена) события, указатель был получен по kevent_insert
 */
void kevent_cancel(void *evt);
/**
 * Получение времени ближайшего события, если оно имеется в хранилище, то есть оно не пустое
 */
int kevent_get_time(uint64_t *time);
/**
 * Выборка ближайшего следующего события, которое наступило в соответствии с systime().
 * Объект удаляется из хранилища.
 * Операция имеет защиту по kevent_store_lock
 */
struct thread *kevent_fetch();

#endif /* EVENT_H_ */
