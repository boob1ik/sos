#ifndef PROCESS_H_
#define PROCESS_H_

#include <os_types.h>

#define PROCNAME(a) \
    const char __attribute__ ((section (".proc_header.pname"))) __proc_name[] = a;

/**
 * Функция запуска процесса из памяти с передачей стандартных аргументов в функцию main.
 * Процесс должен быть загружен в память текущим процессом или размещаться в статической глобальной памяти,
 * которая может быть использована текущим процессом для запуска целевого процесса.
 * Процесс должен находится по заданному адресу, если он позиционно зависимый (собран для исполнения по
 * фиксированному адресу). Заголовок процесса может не являться частью его бинарного образа, то есть
 * может находится в любом доступном месте памяти.
 *
 * @param imagehdr  - заголовок процесса, обычно это начало бинарного образа программы для ЗОС
 * @param prio  - приоритет запускаемого процесса
 * @param arg0  - первый строковый аргумент, NULL если нет аргументов;
 *                переменный список ссылок на строки аргументов должен всегда закрываться обязательным NULL значением
 * @return  >0  - выполнено, возвращается номер запущенного процесса
 *          -1  - ошибка, код в errno:
 *                E2BIG   - превышен допустимый суммарный объем строковых аргументов
 *                ENOEXEC - ссылка на заголовок или его содержание не соответсвует исполняемому процессу
 *                ENAMETOOLONG - превышена допустимая длина пути с именем процесса
 *                EINVAL - заголовок содержит недопустимые параметры
 *                EACCESS - нет разрешения на запуск процесса
 *                EBUSY - ресурсы заняты(например память, где размещен код), новый процесс не может быть запущен
 *                ENOMEM  - нет памяти в системе для запуска нового процесса
 *
 *
 *
 */
int spawnm(const struct proc_header *imagehdr, int prio, const char *arg0, ...);

#endif /* PROCESS_H_ */
